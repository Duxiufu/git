//输入一个四位数，将其加密后输出。方法是将该数每一位上的数字加9，然后除以10取余，做为该位上的新数字，最后将千位和
//十位上的数字互换，百位和个位上的数字互换，组成加密后的新四位数。例如输入1257，经过加9取余后得到新数字0146，再经过两次换位后得到4601。
//import java.util.Scanner;
//
//public class Main {
//
//	public static void main(String[] args) {
//		int a[] = new int[4],i=0;
//		Scanner in = new Scanner(System.in);
//		int num = in.nextInt();
//		do{
//			a[i] = num % 10;
//			num /= 10;
//			i++;
//		}while(num != 0);
//		for(i=0;i<a.length;i++)
//		{
//			a[i] = (a[i] + 9) % 10;
//		}
//		System.out.println("The encrypted number is " + a[1] + a[0] + a[3] + a[2]);
//	}
//
//}


//将一个具有20个元素的数组中的中间10个元素按从大到小顺序排序，要求使用冒泡法排序。
//import java.util.Scanner;
//
//public class Main {
//
//	public static void main(String[] args) {
//		int a[] = new int[20];
//		Scanner in = new Scanner(System.in);
//		for(int i=0;i<a.length;i++)
//			a[i] = in.nextInt();
//		for(int n=0;n<9;n++)
//		{
//			for(int i=5;i<14;i++)
//			{
//				if(a[i]<a[i+1])
//				{
//					int index;
//					index = a[i];
//					a[i] = a[i+1];
//					a[i+1] = index;
//				}
//			}
//		}
//		for(int i=0;i<a.length;i++)
//			System.out.printf("%4d",a[i]);
//	}
//}


//编写函数fun，求出a到b之内能被7或者11整除，但不能同时被7和11整除的所有正数，并将他们放在数组中，函数返回这些数的个数。编写main函数，输入a，b的值并调用函数进行运算。
//import java.util.Scanner;
//
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int min = in.nextInt();
//		int max = in.nextInt();
//		fun(min,max);
//	}
//	public static void fun(int min,int max){
//		for(int i=min;i<=max;i++)
//		{
//			if((i % 7 == 0) || (i % 11 == 0))
//			{
//				if((i %7 == 0) && (i % 11 == 0))
//					continue;
//				else
//					System.out.printf("%d ",i);
//			}
//		}
//	}
//}

//编程从键盘上输入20个整数，求去掉最大值和最小值以后那些元素的平均值
//import java.util.Scanner;
//
//public class Main {
//
//	public static void main(String[] args) {
//		int a[] = new int[20],min,max,count=0,sum=0;
//		Scanner in = new Scanner(System.in);
//		for(int i=0;i<a.length;i++)
//		{
//			a[i] = in.nextInt();
//		}
//		min = a[0];
//		max = a[0];
//		for(int i=1;i<a.length;i++)
//		{
//			if(a[i]>max)
//				max = a[i];
//			if(a[i]<min)
//				min = a[i];
//		}
//		for(int i=0;i<a.length;i++)
//		{
//			if(a[i]==max || a[i]==min)
//			{
//				a[i]=0;
//				count--;
//			}
//			count++;
//			sum += a[i];
//		}
//		System.out.printf("count=%d,average=%.2f\n",count,(double)sum/count);
//	}
//}



//打印杨辉三角
import java.util.Scanner;

public class Diwucizuoye {

	public static void main(String[] args) {
		int a[][] = new int[99][99],n;
		Scanner in = new Scanner(System.in);
		n = in.nextInt();
		for(int i=0;i<n;i++)
			a[i][0]=1;
		for(int i=1;i<n;i++)
		{
			for(int j=1;j<n;j++)
			{
				a[i][j] = a[i-1][j] + a[i-1][j-1];
			}
		}
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(a[i][j] != 0)
					System.out.printf("%5d",a[i][j]);
			}
			System.out.println();
		}
	}
}
